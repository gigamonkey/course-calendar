- Intro to Intro (1)

  - Introductions

    - Me to you

    - You to me. Index card with:

      - Preferred name on one side in big letters

      - Answers to questions on the board on the back.

  - Class policies

    - No phones out during class. (Theory: buy 10-slot charging station. (e.g.
      https://www.amazon.com/Adjustable-Dividers-Charging-Multiple-Organizer/dp/B01AW9Z9ZE/)
      First-come, first-served. All other phones must stay in pocket or bag
      during class or will be taken and not charged.)

    - No games and no social media. Computer is for doing work and research
      related to your work.

    - Grades:

    - Homework:

    - Collaboration

      - You will work in pairs a lot. It is important to switch between
        "driving" and "navigating".

      - Recurse Center rules.

    - Coding, open source, and working together:

      - Write your own code.

      - If you find useful snippets of code on the internet, cite it in a comment.

    - No food near computers.

    - Masks: encouraged and school policies will be enforced.

  - Things we can do with computers

    - Count stuff, i.e. Math

    - Text

    - Graphics

    - Video

    - Games

    - Communicate (with text, graphics, video, etc.)

    - What else?

  - What is programming?

    - Why is it fun?

    - Why is it hard?

      - There are a lot of details that you have to get right

      - It is very abstract.

      - Those two things are usually at the opposite end of the mental spectrum.

    - What can you do when you know how to program?

      - Understand, at least a bit, how all this stuff around us works?

      - Build tools to make your life better.

- What is data? (1)

  - What can we do with it?

    - Render it: play a video, display text, etc.

    - Store it

    - Send and receive it

    - Combine and transform it to make new data

  - What is a data type?

    - A set of possible values

    - Syntax - how you write it

    - Operators - what you can do with it

    - Expressions - combinatios of values and operators

- First three data types (3)

  - Numbers

    - Possible values

    - Syntax

  - Strings

    - Possible values

    - Syntax

  - Booleans

    - Possible values

    - Syntax

  - Operators

    - On numbers: +, -, *, /

    - On strings: +, []

    - On booleans: &&, ||, !

    - Between types, e.g. ===, <, etc.

- Expressions

  - Simple (2)

    - A single value

    - Two values an an operator

  - Complex (3)

    - Precedence

    - Grouping: ()

  - Types of expressions

  - Values of expressions

- Functions

  - What are they? (1)

  - Numeric (1)

    - Various math functions: area of circle, volume of sphere, quadratic equation.

  - Boolean (1)

    - Random logical expressions like sleep_in

  - String (1)

    - Combining strings

    - Extracting characters from strings.

  - Combined (1)

- Arrays

  - Values and syntax (1)

    - Indexing (1)

      - Zero based

      - .length property

      - Up to .length - 1

  - Looping over arrays (1)

  - filter/map/reduce patters (2)

    - count item

    - min

    - max

    - select vowels

    - select not vowels

    - select even indices

    - collect pairs (hmmm, this is hard to do with f/m/r functions)

    - count predicate, e.g. vowels

- Testing (5)

- Project: Caesar Cipher (5)

  - Function that handles a single character rotation.

  - Function that handles a string of only lowercase letters.

  - Add support for uppercase latters.

  - Allow non-letter characters which are passed through unchanged.

  - Write encrypt/decrypt function that work off the same key.

  - Use a string key rather than a single number where each key letter is added to the plaintext letter, cycling.

  - Any other enhancements to encoding, decoding. (Must be roundtrip.)

  - Write a function that cracks simple caesar ciphers by brute force. (How to tell when you've got a crack?)

- Variables

  - Function parameters (1)

  - Constant (1)

    - Names for values

    - Used to simplify expressions

  - Changing (2)

    - Names that can change

  - Scope of variables. (1)

- Control constructs (3)

  - if

  - while

  - for

- Writing clear code (2)

- Function as values (4)

- Objects (5)

  - Properties

    - .length on strings and arrays is a property

  - Methods

- 2D Graphics with Canvas (2)

  - Reading docs at MDN

  - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D

- Project: 2D Graphics (7)

- Animation (4)

- Project: Animation (5)

- HTML Basics (1)

- Project: HTML document (4)

- CSS: make it pretty (1)

- Project: Pretty document (4)

- Dynamic HTML (1)

- Project: Dynamic document (4)

- Classes (9)

- APIs
